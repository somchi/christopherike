// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Account {
  id                 String  @id @default(cuid())
  userId             String
  type               String
  provider           String
  providerAccountId  String
  refresh_token      String?  @db.Text
  access_token       String?  @db.Text
  expires_at         Int?
  token_type         String?
  scope              String?
  id_token           String?  @db.Text
  session_state      String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String?   @unique
  emailVerified DateTime?
  dateCreate DateTime
  password String
  role    Role     @default(USER)
  accounts      Account[]
  sessions      Session[]
  services Service[]
  skills Skill[]
  reviews Review[]
  designs Design[]
  videos Video[]
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}


model Service {
  id  String @id @default(cuid())
  name String   @unique
  description String
  dateCreate DateTime
  lastModified DateTime
  userId     String
  user      User  @relation(fields: [userId], references: [id])
}

model Skill  {
  name String @unique
  degree String
  id String @id @default(cuid())
  dateCreate DateTime
  lastModified DateTime
  userId     String
  user      User  @relation(fields: [userId], references: [id])
}

model Review  {
  name String @unique
  img String
  id String @id @default(cuid())
  dateCreate DateTime
  lastModified DateTime
  userId     String
  user      User  @relation(fields: [userId], references: [id])
}

model Design  {
  name String @unique
  img String
  id String @id @default(cuid())
  dateCreate DateTime
  lastModified DateTime
  userId     String
  user      User  @relation(fields: [userId], references: [id])
}

model Video  {
  name String
  video String
  id String @id @default(cuid())
  dateCreate DateTime
  lastModified DateTime
  userId     String
  user      User  @relation(fields: [userId], references: [id])
}

enum Role {
  USER
  ADMIN
}